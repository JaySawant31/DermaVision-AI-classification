# -*- coding: utf-8 -*-
"""Untitled55.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pTQWJ6qBA9bxjI1GZfnSyO7WfEONJJSC
"""

import torch
import torchvision.transforms as transforms
from torchvision.models import inception_v3
from torchmetrics.image.fid import FrechetInceptionDistance
from PIL import Image

# === Function to preprocess image for InceptionV3 ===
def load_and_preprocess(image_path):
    transform = transforms.Compose([
        transforms.Resize((299, 299)),
        transforms.ToTensor(),
        transforms.Normalize(mean=[0.485, 0.456, 0.406],
                             std=[0.229, 0.224, 0.225])
    ])
    image = Image.open(image_path).convert('RGB')
    return transform(image).unsqueeze(0)

# === User Input: Replace with paths to your images ===
image1_path = "image1.jpg"  # e.g., "output/generated.png"
image2_path = "image2.jpg"  # e.g., "output/groundtruth.png"

# === Load and preprocess ===
img1 = load_and_preprocess(image1_path)
img2 = load_and_preprocess(image2_path)

# === Compute FID ===
fid = FrechetInceptionDistance(feature=2048, normalize=True)
fid.update(img1, real=True)
fid.update(img2, real=False)
score = fid.compute()

print(f"Fr√©chet Inception Distance (FID) between the two images: {score.item():.4f}")